# ðŸŽ¯ MissÃ£o 4 â€” Usar .gitignore

## ðŸ“‹ Objetivo
Aprender a usar o .gitignore para excluir arquivos do controle de versÃ£o.

## ðŸš€ Passos

1. **Criar branch**
   ```bash
   git checkout -b missao-4
   ```

2. **Criar arquivo secreto**
   - Crie o arquivo `segredo.txt`
   - Adicione qualquer conteÃºdo
   - Exemplo: "Esta Ã© uma informaÃ§Ã£o secreta!"

3. **Verificar .gitignore**
   - Abra o arquivo `.gitignore`
   - Verifique se `segredo.txt` estÃ¡ listado
   - Se nÃ£o estiver, adicione:
     ```
     segredo.txt
     ```

4. **Testar o .gitignore**
   ```bash
   git status
   ```
   - O arquivo `segredo.txt` NÃƒO deve aparecer na lista

5. **Fazer commit**
   ```bash
   git add .gitignore
   git commit -m "chore: adicionar arquivo secreto e ignorar no git"
   git push origin missao-4
   ```

6. **Criar Pull Request**
   - VÃ¡ para o GitHub
   - Clique em "New Pull Request"
   - Selecione `missao-4` como base
   - Adicione uma descriÃ§Ã£o
   - Crie o PR

## ðŸ’¡ Dicas
- Use `git check-ignore` para verificar se um arquivo estÃ¡ sendo ignorado
- PadrÃµes comuns no .gitignore:
  - `*.log` - ignora todos os arquivos .log
  - `node_modules/` - ignora a pasta node_modules
  - `.env` - ignora arquivos de ambiente
- Sempre verifique o status antes de commitar

## âœ… CritÃ©rios de Sucesso
- [ ] Branch criada corretamente
- [ ] Arquivo secreto criado
- [ ] .gitignore configurado
- [ ] Arquivo secreto nÃ£o aparece no git status
- [ ] PR aberto para a main

Boa sorte! ðŸš€
