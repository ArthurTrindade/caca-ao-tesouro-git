# ðŸŽ¯ MissÃ£o 3 â€” Resolver conflito simples

## ðŸ“‹ Objetivo
Aprender a resolver conflitos de merge no Git.

## ðŸš€ Passos

1. **Criar branch**
   ```bash
   git checkout -b missao-3
   ```

2. **Editar arquivo**
   - Abra o arquivo `conflito.txt`
   - Adicione uma frase qualquer
   - Exemplo: "Esta Ã© minha contribuiÃ§Ã£o para o arquivo!"

3. **Fazer commit e push**
   ```bash
   git add conflito.txt
   git commit -m "feat: adicionar frase ao conflito.txt"
   git push origin missao-3
   ```

4. **Resolver conflito**
   - A instrutora farÃ¡ uma alteraÃ§Ã£o na `main`
   - Atualize sua branch:
     ```bash
     git checkout main
     git pull origin main
     git checkout missao-3
     git merge main
     ```
   - Resolva o conflito no arquivo `conflito.txt`
   - Remova os marcadores de conflito (`<<<<<<<`, `=======`, `>>>>>>>`)
   - Mantenha o conteÃºdo que fizer mais sentido

5. **Commit da resoluÃ§Ã£o**
   ```bash
   git add conflito.txt
   git commit -m "fix: resolver conflito no conflito.txt"
   git push origin missao-3
   ```

6. **Criar Pull Request**
   - VÃ¡ para o GitHub
   - Clique em "New Pull Request"
   - Selecione `missao-3` como base
   - Adicione uma descriÃ§Ã£o
   - Crie o PR

## ðŸ’¡ Dicas
- Use `git status` para ver arquivos com conflito
- Use `git diff` para ver as diferenÃ§as
- Mantenha a calma ao resolver conflitos
- Revise o arquivo apÃ³s resolver o conflito

## âœ… CritÃ©rios de Sucesso
- [ ] Branch criada corretamente
- [ ] Conflito resolvido manualmente
- [ ] Commit da resoluÃ§Ã£o feito
- [ ] PR aberto para a main

Boa sorte! ðŸš€
